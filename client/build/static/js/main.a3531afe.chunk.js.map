{"version":3,"sources":["images sync /^/.//.*/.png$","images/SkipTheLineLogo.png","images/TruckDefaultImage.png","images/UserDefaultImage.png","images/5e7ad20e3fe6637a8a43bc0e.png","images/5e7af44b4b82156f9a045419.png","images/5e7afc482092f5e634d49c03.png","images/5e7b07c21d228d06767ce4bf.png","images/5e7b087d1d228d06767ce4c1.png","images/5e7bfe1c3b51349737ddaa12.png","images/5e7bfe4d3b51349737ddaa14.png","images/5e7bfe753b51349737ddaa16.png","images/5e7bfe9a3b51349737ddaa18.png","high-order-component/Auxiliary.js","components/Layout/Header/Header.js","components/Layout/Layout.js","components/OrderSummary/Order/Order.js","components/OrderSummary/OrderSummary.js","components/FoodList/Food/Food.js","components/FoodList/FoodList.js","components/LoadingPlaceholder/LoadingPlaceHolder.js","components/FoodFilter/FoodFilter.js","containers/OrderBuilder/OrderBuilder.js","components/FoodTruck/FoodTruck.js","components/FoodTruckFilter/FoodTruckFilter.js","containers/FoodTruckSelector/FoodTruckSelector.js","components/Payment/Payment.js","containers/Checkout/Checkout.js","components/Authentication/LogIn/LogIn.js","components/Authentication/SignUp/SignUp.js","containers/Authentication/Authentication.js","components/AccountSettings/AdminDashBoard/AllUsers/AllUsers.js","components/AccountSettings/AdminDashBoard/AllFoodTrucks/AllFoodTrucks.js","components/AccountSettings/AdminDashBoard/AdminDashBoard.js","components/AccountSettings/MyAccount/MyAccount.js","components/AccountSettings/MyFoodTrucks/MyFoodTruck/MyFoodTruck.js","components/AccountSettings/MyFoodTrucks/FoodTruckMenu/MenuItem/MenuItem.js","components/AccountSettings/MyFoodTrucks/FoodTruckMenu/FoodTruckMenu.js","components/AccountSettings/MyFoodTrucks/MyFoodTrucks.js","components/AccountSettings/Password/Password.js","components/AccountSettings/Transactions/Transaction/TransactionDetails.js","components/AccountSettings/Transactions/Transaction/Transaction.js","components/AccountSettings/Transactions/Transactions.js","containers/AccountSetting/AccountSetting.js","containers/ThankYou/ThankYou.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","auxiliary","props","children","Header","state","userName","userId","goToPage","path","history","push","updateUserName","require","get","then","response","data","name","setState","this","userProfileButton","onClick","className","imagePath","err","alt","src","Component","withRouter","layout","Auxiliary","order","IconButton","aria-label","size","addThisFood","numUnits","removeThisFood","price","clearThisFood","canCheckout","userType","selectedFood","forEach","foodId","subTotal","orders","selectedTruck","foodList","food","_id","unitPrice","key","toFixed","addFood","removeFood","clearFood","tabIndex","checkout","AddToCartButton","withStyles","root","backgroundColor","orange","color","border","Button","description","disabled","variant","truckFoodList","loadingPlaceHolder","foodFilter","keyWord","value","placeholder","onChange","event","target","filterFood","axios","OrderBuilder","location","truckId","updatedSelectedTruckInfo","catch","error","console","log","updateSelectedFood","newCount","updatedSelectedFood","oldCount","pathname","foodTruckId","type","orderBuilder","status","avgWaitTime","foodTruckFilter","filterFoodTruck","FoodTruckSelector","foodTruckList","getAllFoodTruck","foodTruck","averageWaitTime","post","alert","Checkout","password","StyledTextField","marginBottom","borderColor","TextField","StyledButton","label","updateAuthAction","signUp","confirmedPassword","defaultValue","Authentication","logIn","oldAuthAction","LogIn","AllUsers","classes","makeStyles","table","minWidth","useStyles","rows","allUsers","user","userPassword","accountStatus","component","Paper","align","row","scope","changeUserAccountStatus","removeUser","AllFoodTrucks","allFoodTrucks","truck","_ownerId","truckStatus","truckName","truckWaitTime","removeTruck","AdminDashBoard","currAdminId","loadAllUsers","loadAllFoodTrucks","delete","newStatus","patch","ownerId","dashboard","width","marginRight","MyFoodTruck","infoStatus","uuid","handleChangeTruckName","handleChangeTruckStatus","handleChangeTruckAverageWaitTime","handleChangeTruckDescription","FoodNameTextField","FoodDescriptionTextField","FoodPriceTextField","menuItem","handleChangeFoodName","handleChangeFoodDescription","handleChangeFoodPrice","removeMenuItem","foodTruckMenu","MyFoodTrucks","myFoodTruckStatus","myFoodTrucks","getMyFoodTruck","updatedStatus","editFoodTruckInfo","saveFoodTruckInfo","addMenuItem","updatedFoodTruckInfo","undefined","i","splice","addFoodTruck","newFoodTruck","removeFoodTruck","newName","newAverageWaitTime","newDescription","newPrice","length","FoodTruckMenu","Password","oldPassword","newPassword","confirmNewPassword","marginTop","forceUpdate","useForceUpdate","DialogTitle","theme","margin","padding","spacing","closeButton","position","right","top","palette","grey","onClose","other","disableTypography","Typography","DialogContent","MuiDialogContent","StyledTableCell","TableCell","TransactionDetails","React","useState","open","setOpen","handleClose","maxWidth","orderItems","item","itemId","itemName","itemUnitPrice","itemNumber","numberOrdered","itemTotalPrice","totalPrice","Dialog","aria-labelledby","Transaction","transactions","transaction","orderId","customerName","customer","orderDate","date","format","Date","time","orderTotal","total","foodTruckName","vendorName","owner","changeOrderStatus","removeRow","Transactions","allTransactions","getAllOrderHistory","removeTransactionHistory","adminTransaction","AccountSetting","currentSetting","getSettingChoice","updateCurrentSetting","newSetting","settingUI","accountSetting","ThankYou","redirectToHomePage","setTimeout","App","exact","Boolean","window","hostname","match","app","forceRefresh","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a3531afe.chunk.js","sourcesContent":["var map = {\n\t\"./5e7ad20e3fe6637a8a43bc0e.png\": 186,\n\t\"./5e7af44b4b82156f9a045419.png\": 187,\n\t\"./5e7afc482092f5e634d49c03.png\": 188,\n\t\"./5e7b07c21d228d06767ce4bf.png\": 189,\n\t\"./5e7b087d1d228d06767ce4c1.png\": 190,\n\t\"./5e7bfe1c3b51349737ddaa12.png\": 191,\n\t\"./5e7bfe4d3b51349737ddaa14.png\": 192,\n\t\"./5e7bfe753b51349737ddaa16.png\": 193,\n\t\"./5e7bfe9a3b51349737ddaa18.png\": 194,\n\t\"./SkipTheLineLogo.png\": 122,\n\t\"./TruckDefaultImage.png\": 123,\n\t\"./UserDefaultImage.png\": 124\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 121;","module.exports = __webpack_public_path__ + \"static/media/SkipTheLineLogo.9265427d.png\";","module.exports = __webpack_public_path__ + \"static/media/TruckDefaultImage.2b31eb13.png\";","module.exports = __webpack_public_path__ + \"static/media/UserDefaultImage.c50f2e35.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7ad20e3fe6637a8a43bc0e.bb0cad4e.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7af44b4b82156f9a045419.10e80336.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7afc482092f5e634d49c03.69055242.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7b07c21d228d06767ce4bf.e8a0ccdc.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7b087d1d228d06767ce4c1.089ed91d.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7bfe1c3b51349737ddaa12.8d1ac9cd.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7bfe4d3b51349737ddaa14.53e766e8.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7bfe753b51349737ddaa16.b7dd139e.png\";","module.exports = __webpack_public_path__ + \"static/media/5e7bfe9a3b51349737ddaa18.04b3a40e.png\";","const auxiliary = props => props.children;\n\nexport default auxiliary;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './Header.css'\n\n\nclass Header extends Component {\n    state = {\n        userName: null,\n        userId: null,\n    };\n\n    goToPage = (path) => {\n        this.props.history.push(path);\n    };\n\n    updateUserName = () => {\n        const axios = require('axios');\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.name) {\n                    this.setState({userName: response.data.name});\n                    this.setState({userId: response.data.id});\n                }\n            });\n    };\n\n    componentDidMount() {\n        this.updateUserName();\n    };\n\n    render() {\n        let userProfileButton = (\n            <button onClick={() => {\n                this.goToPage('/authentication');\n            }}\n                    className=\"header-login-button\"\n            >\n                <i className=\"fa fa-user-circle header-login-button-logo\"></i>\n                LOG IN\n            </button>\n        );\n        if (this.state.userName) {\n            let imagePath = '';\n            try {\n                imagePath = require(`../../../images/${this.state.userId}.png`);\n            } catch(err){\n                imagePath = require('../../../images/UserDefaultImage.png');  //set default image path\n            }\n            userProfileButton = (\n                <img\n                    alt=\"User profile\"\n                    onClick={() => {\n                        this.goToPage('/account-setting')\n                    }}\n                    className=\"header-profile-img\"\n                    src={imagePath}\n                />\n            );\n        }\n        return (\n            <div className=\"header-container\">\n                <img\n                    alt=\"header logo\"\n                    onClick={() => {\n                        this.goToPage('/')\n                    }}\n                    className=\"header-logo\"\n                    src={require('../../../images/SkipTheLineLogo.png')}\n                />\n                {userProfileButton}\n            </div>\n        )\n    };\n\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport Auxiliary from '../../high-order-component/Auxiliary';\nimport Header from './Header/Header';\nimport './Layout.css';\n\nconst layout = (props) => (\n    <Auxiliary>\n        <Header/>\n        <main className='layout-main'>\n            {props.children}\n        </main>\n    </Auxiliary>\n);\n\nexport default layout;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport './Order.css';\n\nconst order = (props) => {\n    return (\n        <div className=\"order-container\">\n            <IconButton aria-label=\"delete\" className=\"food-button\" size='small' onClick={props.addThisFood}>\n                <AddCircleOutlineOutlinedIcon/>\n            </IconButton>\n            <span className=\"order-num\">  {props.numUnits}</span>\n            <IconButton aria-label=\"delete\" className=\"food-button\" size='small' onClick={props.removeThisFood}>\n                <RemoveCircleOutlineOutlinedIcon/>\n            </IconButton>\n            <span className=\"order-name\"> {props.name} </span>\n            <span className=\"order-price\"> ${props.price}\n                <IconButton aria-label=\"delete\" size='small' onClick={props.clearThisFood}>\n        <HighlightOffIcon/>\n      </IconButton> </span>\n        </div>\n    );\n};\n\nexport default order;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Order from './Order/Order';\nimport './OrderSummary.css';\n\nconst orderSummary = (props) => {\n    let canCheckout = false;\n    if (props.userType === 'customer') {\n        (Object.keys(props.selectedFood)).forEach((foodId) => {\n            if (props.selectedFood[foodId] > 0) canCheckout = true;\n        });\n    }\n\n    if (canCheckout) {\n        let subTotal = 0;\n        const orders = props.selectedTruck.foodList.map(food => {\n            if (props.selectedFood[food._id]) {\n                const numUnits = props.selectedFood[food._id];\n                const price = food.unitPrice * numUnits;\n                subTotal += price;\n                return <Order\n                    key={food._id}\n                    numUnits={numUnits}\n                    name={food.name}\n                    price={price.toFixed(2)}\n                    addThisFood={() => props.addFood(food._id)}\n                    removeThisFood={() => props.removeFood(food._id)}\n                    clearThisFood={() => props.clearFood(food._id)}/>\n            }\n            return null;\n        });\n        return (\n            <div className=\"order-summary-container\">\n                <h2 className=\"order-summary-header\"> Your Order </h2>\n                <div className=\"order-summary\">\n                    {orders}\n                </div>\n                <div className=\"order-summary-subtotal\">\n                    Food & Beverage Subtotal: ${subTotal.toFixed(2)}\n                </div>\n                <div\n                    tabIndex=\"1\"\n                    className=\"order-summary-checkout-button\" onClick={() => {\n                    props.checkout();\n                }}>\n                    Checkout\n                </div>\n            </div>\n        );\n    } else if (props.userType === 'customer') {\n        return (\n            <div className=\"order-summary-empty-container\">\n                <h2 className=\"order-summary-header\"> Your Order </h2>\n                <div className=\"order-summary-empty\">\n                    You haven't order anything yet ¯\\_(ツ)_/¯\n                </div>\n            </div>\n        );\n    } else if (props.userType && props.userType !== 'customer') {\n        // TODO: COME UP WITH A LESS SHITTIER MESSAGE\n        return (\n            <div className=\"order-summary-empty-container\">\n                <div className=\"order-summary-empty\">\n                    Good Morning ヾ(´･ω･｀)ﾉ\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"order-summary-empty-container\">\n                <h2 className=\"order-summary-header\"> Your Order </h2>\n                <div className=\"order-summary-empty\">\n                    Please sign in first\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(orderSummary);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\nimport {orange} from '@material-ui/core/colors';\nimport './Food.css';\n\nconst AddToCartButton = withStyles(() => ({\n    root: {\n        backgroundColor: orange[400],\n        color: 'white',\n        border: 0,\n        '&:hover': {\n            backgroundColor: orange[700],\n        },\n    },\n}))(Button);\n\nconst food = (props) => {\n    return (\n        <div className=\"food-container\">\n            <div className=\"food-name\"> {props.name} </div>\n            <div className=\"food-description\"> {props.description} </div>\n            <div className=\"food-price\"> ${props.price} </div>\n            <AddToCartButton\n                disabled={props.userType !== 'customer'}\n                className='add-to-cart'\n                onClick={props.addThisFood}\n                variant=\"outlined\">\n                Add to Cart\n            </AddToCartButton>\n        </div>\n    );\n};\n\nexport default food;\n","import React from 'react';\nimport Food from './Food/Food';\nimport './FoodList.css';\n\nconst foodList = (props) => {\n    const truckFoodList = props.selectedTruck.foodList.map(food => {\n        return <Food key={food._id}\n                     name={food.name}\n                     description={food.description}\n                     price={food.unitPrice}\n                     userType={props.userType}\n                     addThisFood={() => props.addFood(food._id)}/>\n    });\n    return (\n        <div className=\"foodlist-container\">\n            <h1> {props.selectedTruck.name} </h1>\n            <div className=\"foodlist\"> {truckFoodList} </div>\n        </div>\n    );\n};\n\nexport default foodList;\n","import React from 'react';\nimport './LoadingPlaceHolder.css';\n\nconst loadingPlaceHolder = () => {\n    return (\n        <div className=\"loading-placeholder\">\n            <i className=\"loading-placeholder-icon fa fa-spinner fa-pulse\"></i>\n            <div className=\"loading-placeholder-words\"> loading... </div>\n        </div>\n    );\n\n};\n\nexport default loadingPlaceHolder;\n","import React from 'react';\nimport './FoodFilter.css';\nimport '../../GlobalStyle.css';\n\nconst foodFilter = (props) => {\n    let keyWord;\n    const handleChangeKeyWard = (event) => {\n        keyWord = event.target.value;\n        if (!keyWord) {\n            props.filterFood('');\n        }\n    };\n    return (\n        <div>\n            <input\n                className=\"food-filter-input\"\n                value={keyWord}\n                placeholder=\"Search Food...\"\n                onChange={handleChangeKeyWard}\n            />\n            <button\n                className=\"filter-button\"\n                onClick={() => {props.filterFood(keyWord)}}\n            >\n                <i className=\"fa fa-search\"></i>\n            </button>\n        </div>\n    )\n};\n\nexport default foodFilter;\n","import React, {Component} from 'react';\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\nimport FoodList from '../../components/FoodList/FoodList';\nimport Auxiliary from '../../high-order-component/Auxiliary';\nimport Spinner from '../../components/LoadingPlaceholder/LoadingPlaceHolder';\nimport FoodFilter from '../../components/FoodFilter/FoodFilter';\nimport './OrderBuilder.css';\nconst axios = require('axios');\n\nclass OrderBuilder extends Component {\n    state = {\n        selectedFood: {},\n        selectedTruck: null,\n        userType: null,\n    };\n\n    componentDidMount() {\n        axios.get(`/api/foodtruck/get/${this.props.location.state.truckId}`)\n            .then(response => {\n                this.setState({selectedTruck: response.data});\n            }).catch(error => {\n                console.log('order builder get food truck failed', error)\n            });\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.type) {\n                    this.setState({ userType: response.data.type });\n                }\n            });\n    };\n\n    filterFood = (keyWord) => {\n        if (!keyWord) {\n            axios.get(`/api/foodtruck/get/${this.props.location.state.truckId}`)\n                .then(response => {\n                    this.setState({selectedTruck: response.data});\n                }).catch(error => {\n                    console.log('order builder get food truck failed', error)\n                });\n        } else {\n            axios.get(`/api/foodtruck/filter/${this.props.location.state.truckId}/${keyWord}`)\n                .then(response => {\n                    const updatedSelectedTruckInfo = {...this.state.selectedTruck};\n                    updatedSelectedTruckInfo.foodList = response.data;\n                    this.setState({selectedTruck: updatedSelectedTruckInfo});\n                }).catch(error => {\n                    console.log('order builder filter failed', error)\n                });\n        }\n    };\n\n    updateSelectedFood = (foodId, newCount) => {\n        const updatedSelectedFood = {...this.state.selectedFood};\n        updatedSelectedFood[foodId] = newCount;\n        this.setState({selectedFood: updatedSelectedFood});\n    };\n\n    addFood = (foodId) => {\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.id) {\n                    const oldCount = this.state.selectedFood[foodId]\n                        ? this.state.selectedFood[foodId]\n                        : 0;\n                    const newCount = oldCount + 1;\n                    this.updateSelectedFood(foodId, newCount);\n                } else {\n                    this.props.history.push('/authentication');\n                }\n            });\n    };\n\n    removeFood = (foodId) => {\n        const oldCount = this.state.selectedFood[foodId]\n            ? this.state.selectedFood[foodId]\n            : 0;\n        if (oldCount > 0) {\n            const newCount = oldCount - 1;\n            this.updateSelectedFood(foodId, newCount);\n        }\n    };\n\n    clearFood = (foodId) => {\n        this.updateSelectedFood(foodId, 0);\n    };\n\n    checkout = () => {\n        this.props.history.push({\n            pathname: '/checkout',\n            state: {\n                selectedFood: this.state.selectedFood,\n                foodTruckId: this.state.selectedTruck._id\n            }\n        });\n    };\n\n    render() {\n        let orderBuilder = <Spinner/>;\n        if (this.state.selectedTruck) {\n            orderBuilder = (\n                <Auxiliary>\n                    <FoodFilter filterFood={this.filterFood}/>\n                    <FoodList selectedTruck={this.state.selectedTruck}\n                              addFood={this.addFood}\n                              userType={this.state.userType}/>\n                    <OrderSummary selectedTruck={this.state.selectedTruck}\n                                  selectedFood={this.state.selectedFood}\n                                  addFood={this.addFood}\n                                  removeFood={this.removeFood}\n                                  clearFood={this.clearFood}\n                                  userType={this.state.userType}\n                                  checkout={this.checkout}/>\n                </Auxiliary>\n            )\n        }\n\n        return (\n            <div className=\"order-builder-container\">\n                {orderBuilder}\n            </div>\n        );\n    };\n}\n\nexport default OrderBuilder;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './FoodTruck.css';\n\nconst foodTruck = (props) => {\n    const goToOrderBuilder = () => {\n        if (props.status === 'open') props.history.push({\n            pathname: '/order-builder',\n            state: { truckId: props.truckId }\n        });\n    };\n\n    let imagePath = '';\n    try {\n        imagePath = require(`../../images/${props.truckId}.png`);\n    } catch(err){\n        imagePath = require('../../images/TruckDefaultImage.png');  //set default image path\n    }\n\n    return (\n        <div className={`foodtruck-container ${props.status === 'open' ? 'foodtruck-container-clickable' : null}`}\n             onClick={goToOrderBuilder}>\n            <img\n                alt=\"food truck\"\n                className=\"foodtruck-image\"\n                src={imagePath}\n            />\n            <div className=\"foodtruck-info\">\n                <div className=\"foodtruck-name\"> {props.name} </div>\n                <div className=\"foodtruck-wait-time\">\n                    {props.avgWaitTime}\n                </div>\n                <div className=\"foodtruck-description\">\n                    {props.description}\n                </div>\n            </div>\n            <div\n                className={`foodtruck-status-${props.status === 'open' ? 'open' : 'closed'}`}\n            >\n                {props.status === 'open' ? 'Open' : 'Closed'}\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(foodTruck);\n","import React from 'react';\nimport './FoodTruckFilter.css';\nimport '../../GlobalStyle.css';\n\n\nconst foodTruckFilter = (props) => {\n    let keyWord;\n    const handleChangeKeyWard = (event) => {\n        keyWord = event.target.value;\n        if (!keyWord) {\n            props.filterFoodTruck('');\n        }\n    };\n    return (\n        <div>\n            <input\n                className=\"foodtruck-filter-input\"\n                value={keyWord}\n                placeholder=\"Search Food Trucks...\"\n                onChange={handleChangeKeyWard}\n            />\n            <button\n                className=\"filter-button foodtruck-filter-search-button\"\n                onClick={() => {props.filterFoodTruck(keyWord)}}\n            >\n                <i className=\"fa fa-search\"></i>\n            </button>\n        </div>\n    )\n};\n\nexport default foodTruckFilter;\n","import React, {Component} from 'react';\nimport Auxiliary from '../../high-order-component/Auxiliary';\nimport FoodTruck from '../../components/FoodTruck/FoodTruck';\nimport FoodTruckFilter from '../../components/FoodTruckFilter/FoodTruckFilter';\nimport Spinner from '../../components/LoadingPlaceholder/LoadingPlaceHolder';\nconst axios = require('axios');\n\nclass FoodTruckSelector extends Component {\n    state = {\n        foodTruckList: null\n    };\n\n    getAllFoodTruck = () => {\n        axios.get('/api/foodtruck/get/all')\n            .then(response => {\n                this.setState({foodTruckList: response.data});\n            }).catch(error => {\n                console.log('food truck selector get all food trucks failed', error)\n            });\n    };\n\n    componentDidMount() {\n        this.getAllFoodTruck();\n    };\n\n    filterFoodTruck = (keyWord) => {\n        if (!keyWord) {\n            this.getAllFoodTruck();\n        } else {\n            axios.get(`/api/foodtruck/filter/${keyWord}`)\n                .then(response => {\n                    this.setState({foodTruckList: response.data});\n                }).catch(error => {\n                    console.log('food truck selector filter food trucks failed', error)\n                });\n        }\n    };\n\n    render() {\n        // TODO: ADD THE FILTER BACK. ADD A LOADER\n        let foodTruckList = <Spinner/>;\n        if (this.state.foodTruckList) {\n            foodTruckList = (\n                <Auxiliary>\n                    {this.state.foodTruckList.map(foodTruck => {\n                        return <FoodTruck\n                            key={foodTruck._id}\n                            truckId={foodTruck._id}\n                            name={foodTruck.name}\n                            status={foodTruck.status}\n                            description={foodTruck.description}\n                            avgWaitTime={foodTruck.averageWaitTime}\n                        />\n                    })}\n                </Auxiliary>\n            )\n        }\n        return (\n            <Auxiliary>\n                <FoodTruckFilter filterFoodTruck={this.filterFoodTruck}/>\n                {foodTruckList}\n            </Auxiliary>\n        )\n    }\n}\n\nexport default FoodTruckSelector;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './Payment.css';\nimport '../../GlobalStyle.css';\n\nconst Payment = (props) => {\n    // const [paymentMethod, updatePaymentMethod] = useState('creditCard');\n    // const getPaymentMethod = (e) => {\n    //     updatePaymentMethod(e.currentTarget.value);\n    // };\n    //\n    // const getPaymentUI = () => {\n    //     if (paymentMethod === 'creditCard') {\n    //         return (\n    //             <div className=\"payment-card\">\n    //                 <input className=\"payment-card-number\" placeholder=\"Credit Card Number\"/>\n    //                 <div>\n    //                     <input className=\"payment-card-info\" placeholder=\"Month\"/>\n    //                     <input className=\"payment-card-info\" placeholder=\"Year\"/>\n    //                     <input className=\"payment-card-info\" placeholder=\"CVV\"/>\n    //                 </div>\n    //             </div>\n    //         );\n    //     } else if (paymentMethod === 'cash') {\n    //         return <div className=\"payment-cash\"> Pay when you pick up your order _(:3」∠❀)_ </div>;\n    //     }\n    // };\n\n    const confirmOrder = () => {\n        const axios = require('axios');\n        axios.post('/api/orderHistory/add', {\n            selectedFood: props.selectedFood,\n            foodTruckId: props.foodTruckId\n        }).then(response => {\n            if (response.data === 'success') props.history.push('/thank-you');\n            else alert('Oops your order was not successful please try again');\n        }).catch(error => {\n            alert('Oops your order was not successful please try again');\n        });\n    };\n\n    return (\n        <div className=\"container\">\n            <h2 className=\"header\"> Confirm Order </h2>\n            <div className=\"body payment-container\">\n                {/*<select className=\"payment-method-selection\" onChange={getPaymentMethod}>*/}\n                    {/*<option defaultValue value=\"creditCard\">Credit Card</option>*/}\n                    {/*<option value=\"cash\">Cash</option>*/}\n                {/*</select>*/}\n                {/*{getPaymentUI()}*/}\n                Please pay for your order at the food Truck. Thank you!\n                <button className=\"payment-confirm-button\"\n                        onClick={() => { confirmOrder() }}>\n                    Confirm\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Payment);\n","import React, {Component} from 'react';\nimport Auxiliary from '../../high-order-component/Auxiliary';\nimport Payment from '../../components/Payment/Payment';\n\nclass Checkout extends Component {\n    render() {\n        return (\n            <Auxiliary>\n                <Payment selectedFood={this.props.location.state.selectedFood}\n                         foodTruckId={this.props.location.state.foodTruckId}/>\n            </Auxiliary>\n        );\n    };\n}\n\nexport default Checkout;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField'\nimport {withStyles} from '@material-ui/core/styles';\nimport {orange} from '@material-ui/core/colors';\nimport Button from \"@material-ui/core/Button/Button\";\nimport '../Auth.css';\nimport '../../../GlobalStyle.css';\n\nconst logIn = (props) => {\n    const StyledTextField = withStyles({\n        root: {\n            marginBottom: '7%',\n            '& label.Mui-focused': {\n                color: orange[700],\n            },\n            '& .MuiOutlinedInput-root': {\n                '&:hover fieldset': {\n                    borderColor: orange[500],\n                },\n                '&.Mui-focused fieldset': {\n                    borderColor: orange[700],\n                },\n            },\n        },\n    })(TextField);\n\n    const StyledButton = withStyles(() => ({\n        root: {\n            backgroundColor: orange[400],\n            color: 'white',\n            border: 0,\n            '&:hover': {\n                backgroundColor: orange[700],\n            },\n        },\n    }))(Button);\n\n    let userName;\n    let password;\n\n    const handleChangeUserName = (event) => {\n        userName = event.target.value;\n    };\n\n    const handleChangePassword = (event) => {\n        password = event.target.value;\n    };\n\n    const loginAndGoBack = () => {\n        const axios = require('axios');\n        axios.post('/api/users/login', {\n            name: userName,\n            password: password\n        })\n            .then(response => {\n                if (response.data === 'bad user name') alert('bad user name');\n                else if (response.data === 'account no longer valid') alert('Sorry your account is no longer valid :(');\n                else if (response.data === 'bad password') alert('bad password');\n                else if (response.data['type']) props.history.push('/');\n            }).catch(error => {\n                console.log('login failed: ', error)\n            });\n    };\n\n    return (\n        <div className=\"container auth-container\">\n            <h2 className=\"header\"> Log In to Skip The Lines </h2>\n            <div className=\"body\">\n                <StyledTextField\n                    id=\"outlined\"\n                    className=\"auth-input\"\n                    value={userName}\n                    onChange={handleChangeUserName}\n                    label=\"User Name\"\n                    variant=\"outlined\"\n                />\n                <StyledTextField\n                    id=\"outlined\"\n                    type=\"password\"\n                    className=\"auth-input\"\n                    value={password}\n                    onChange={handleChangePassword}\n                    label=\"Password\"\n                    variant=\"outlined\"/>\n\n                <StyledButton onClick={loginAndGoBack}>\n                    Log In\n                </StyledButton>\n            </div>\n            <div className=\"auth-redirect-container\">\n        <span\n            className=\"auth-redirect-guide\">\n          Need an account?\n        </span>\n                <button\n                    className=\"auth-redirect-button\"\n                    onClick={props.updateAuthAction}>\n                    Sign Up\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(logIn);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport {withStyles} from '@material-ui/core/styles';\nimport {orange} from '@material-ui/core/colors';\nimport Button from \"@material-ui/core/Button/Button\";\nimport './SignUp.css';\nimport '../Auth.css';\n\nconst signUp = (props) => {\n    const StyledTextField = withStyles({\n        root: {\n            marginBottom: '7%',\n            '& label.Mui-focused': {\n                color: orange[700],\n            },\n            '& .MuiOutlinedInput-root': {\n                '&:hover fieldset': {\n                    borderColor: orange[500],\n                },\n                '&.Mui-focused fieldset': {\n                    borderColor: orange[700],\n                },\n            },\n        },\n    })(TextField);\n    const StyledButton = withStyles(() => ({\n        root: {\n            backgroundColor: orange[400],\n            color: 'white',\n            border: 0,\n            '&:hover': {\n                backgroundColor: orange[700],\n            },\n        },\n    }))(Button);\n\n    let userName;\n    let password;\n    let confirmedPassword;\n    let userType;\n\n    const handleChangeUserName = (event) => {\n        userName = event.target.value;\n    };\n\n    const handleChangePassword = (event) => {\n        password = event.target.value;\n    };\n\n    const handleChangeConfirmedPassword = (event) => {\n        confirmedPassword = event.target.value;\n    };\n\n    const handleChangeType = (event) => {\n        userType = event.target.value;\n    };\n\n    const axios = require('axios');\n    const handleSignUp = () => {\n        if (!userName) {\n            alert('Please type in your user name');\n        } else if (!password) {\n            alert('Please type in your password');\n        } else if (password !== confirmedPassword) {\n            alert('fail to confirm your password');\n        } else {\n            if (userType === 'Food Truck Owner') {\n                axios.post('/api/vendor/signUp', {\n                    name: userName,\n                    password: password\n                }).then(response => {\n                    if (response.data === 'success') {\n                        alert('sign up success!');\n                    } else if (response.data === 'user name taken') {\n                        alert('User name already taken. Please choose a different name!');\n                    }\n                }).catch(error => {\n                    console.log('Vendor sign up failed: ', error)\n                });\n            } else {\n                axios.post('/api/customer/signUp', {\n                    name: userName,\n                    password: password\n                }).then(response => {\n                    if (response.data === 'success') {\n                        alert('sign up success!');\n                    } else if (response.data === 'user name taken') {\n                        alert('User name already taken. Please choose a different name!');\n                    }\n                }).catch(error => {\n                    console.log('Customer sign up failed: ', error)\n                });\n            }\n        }\n    };\n    return (\n        <div className=\"container auth-container\">\n            <h2 className=\"header\"> Sign Up For An Account </h2>\n            <div className=\"body\">\n                <StyledTextField\n                    className=\"auth-input\"\n                    label=\"User Name\"\n                    onChange={handleChangeUserName}\n                    value={userName}\n                    variant=\"outlined\"/>\n                <StyledTextField\n                    type=\"password\"\n                    className=\"auth-input\"\n                    label=\"Password\"\n                    onChange={handleChangePassword}\n                    value={password}\n                    variant=\"outlined\"/>\n                <StyledTextField\n                    className=\"auth-input\"\n                    type=\"password\"\n                    label=\"Confirm Password\"\n                    onChange={handleChangeConfirmedPassword}\n                    value={confirmedPassword}\n                    variant=\"outlined\"/>\n                <div className=\"auth-identity-instruction\">I am a</div>\n                <select value={userType} onChange={handleChangeType} className=\"auth-identity-selection\">\n                    <option defaultValue value=\"customer\">Customer</option>\n                    <option value=\"Food Truck Owner\">Food Truck Owner</option>\n                </select>\n                <StyledButton onClick={handleSignUp}> Sign Up </StyledButton>\n            </div>\n            <div className=\"auth-redirect-container\">\n            <span\n                className=\"auth-redirect-guide\">\n              Already Have An Account?\n            </span>\n                <button\n                    className=\"auth-redirect-button\"\n                    onClick={props.updateAuthAction}>\n                    Log In\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default signUp;\n","import React, { Component } from 'react';\nimport Auxiliary from '../../high-order-component/Auxiliary';\nimport LogIn from '../../components/Authentication/LogIn/LogIn';\nimport SignUp from '../../components/Authentication/SignUp/SignUp';\n\nclass Authentication extends Component {\n  state = {\n    logIn: true\n  };\n\n  updateAuthAction = () => {\n    const oldAuthAction = this.state.logIn;\n    this.setState({logIn: !oldAuthAction});\n  };\n\n  render () {\n    return (\n      <Auxiliary>\n        {this.state.logIn\n          ? <LogIn updateAuthAction={this.updateAuthAction} />\n          : <SignUp updateAuthAction={this.updateAuthAction} />}\n      </Auxiliary>\n    );\n  };\n}\n\nexport default Authentication;\n","import React from 'react';\nimport './AllUsers.css';\nimport {makeStyles} from \"@material-ui/core\";\nimport TableContainer from \"@material-ui/core/TableContainer/TableContainer\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\n\nconst AllUsers = (props) => {\n\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 650,\n        },\n    });\n    const classes = useStyles();\n\n    const createData = (userId, userName, userType, userPassword, accountStatus) => {\n        return { userId, userName, userType, userPassword, accountStatus };\n    };\n\n    const rows = props.allUsers.map(user => {\n        return createData(user._id,\n            user.name,\n            user.type,\n            user.password,\n            user.accountStatus);\n    });\n\n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>User ID</TableCell>\n                            <TableCell align=\"right\">User Name</TableCell>\n                            <TableCell align=\"right\">User Type</TableCell>\n                            <TableCell align=\"right\">User Password</TableCell>\n                            <TableCell align=\"right\"> Account Status </TableCell>\n                            <TableCell align=\"right\"> </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => (\n                            <TableRow key={row.userId}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.userId}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.userName}</TableCell>\n                                <TableCell align=\"right\">{row.userType}</TableCell>\n                                <TableCell align=\"right\">{row.userPassword}</TableCell>\n                                <TableCell align=\"right\">\n                                    <select disabled={row.userType === 'admin'} onChange={(e) => {props.changeUserAccountStatus(row.userId, row.userType, e.target.value)}} defaultValue={row.accountStatus}>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"disabled\">Disabled</option>\n                                    </select>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <button\n                                        className={`all-users-remove-user-button ${row.userType === 'admin' ? 'all-users-remove-user-button-removed' : ''}`}\n                                        onClick={() => {props.removeUser(row.userId, row.userType)}}\n                                    > Remove User </button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default AllUsers;\n","import React from 'react';\nimport './AllFoodTrucks.css';\nimport '../../AccountSettingsStyle.css';\nimport {makeStyles} from \"@material-ui/core\";\nimport TableContainer from \"@material-ui/core/TableContainer/TableContainer\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\n\nconst AllFoodTrucks = (props) => {\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 650,\n        },\n    });\n    const classes = useStyles();\n\n    const createData = (_ownerId, truckId, truckStatus, truckName, truckWaitTime) => {\n        return { _ownerId, truckId, truckStatus, truckName, truckWaitTime };\n    };\n\n    const rows = props.allFoodTrucks.map(truck => {\n        return createData(\n            truck._ownerId,\n            truck._id,\n            truck.status,\n            truck.name,\n            truck.averageWaitTime);\n    });\n\n\n    return (\n        <div className=\"all-trucks-container\">\n            <h1 className=\"header\">All Food Trucks</h1>\n            <TableContainer component={Paper}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Truck ID</TableCell>\n                            <TableCell align=\"right\">Truck Name</TableCell>\n                            <TableCell align=\"right\">Truck Status</TableCell>\n                            <TableCell align=\"right\">Truck Wait Time</TableCell>\n                            <TableCell align=\"right\"> </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => (\n                            <TableRow key={row.truckId}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.truckId}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.truckName}</TableCell>\n                                <TableCell align=\"right\">{row.truckStatus}</TableCell>\n                                <TableCell align=\"right\">{row.truckWaitTime}</TableCell>\n                                <TableCell align=\"right\">\n                                    <button className=\"all-trucks-remove-truck-button\"\n                                            onClick={() => {props.removeTruck(row._ownerId, row.truckId)}}> Remove Truck </button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default AllFoodTrucks;\n","import React, {Component} from 'react';\nimport AllUsers from './AllUsers/AllUsers';\nimport AllFoodTrucks from './AllFoodTrucks/AllFoodTrucks';\nimport Spinner from '../../../components/LoadingPlaceholder/LoadingPlaceHolder';\nimport Auxiliary from '../../../high-order-component/Auxiliary';\nimport './AdminDashBoard.css';\nimport '../../../GlobalStyle.css';\n\nconst axios = require('axios');\n\nclass AdminDashBoard extends Component {\n    // Will use backend to get this data\n    state = {\n        allUsers: null,\n        allFoodTrucks: null,\n        currAdminId: null\n    };\n\n    loadAllUsers = () => {\n        axios.get('/api/users/get/all')\n            .then(response => {\n                this.setState({allUsers: response.data});\n            }).catch(error => {\n                console.log('cannot load all users', error)\n            });\n    };\n\n    loadAllFoodTrucks = () => {\n        axios.get('/api/foodtruck/get/all')\n            .then(response => {\n                this.setState({allFoodTrucks: response.data});\n            }).catch(error => {\n            console.log('admin dashboard load food truck failed: ', error);\n        });\n    };\n\n    componentDidMount() {\n        this.loadAllFoodTrucks();\n        this.loadAllUsers();\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.id) {\n                    this.setState({currAdminId: response.data.id});\n                }\n            });\n    };\n\n    removeUser = (userId, userType) => {\n        axios.delete(`/api/users/delete/${userId}/${userType}`).then(response => {\n            if (response.data === 'success') {\n                if (userId === this.state.currAdminId) this.props.history.push('/');\n                else this.loadAllUsers();\n            } else {\n                console.log('remove user failed')\n            }\n        }).catch(error => {\n            console.log('remove user failed', error);\n        })\n\n    };\n\n    changeUserAccountStatus = (userId, userType, newStatus) => {\n        axios.patch(`/api/users/status/${userId}/${userType}/${newStatus}`).then(response => {\n            if (response.data === 'success') {\n                this.loadAllUsers();\n            } else console.log('change account status failed');\n        }).catch(error => {\n            console.log('change account status failed', error);\n        })\n\n    };\n\n    removeTruck = (ownerId, truckId) => {\n        axios.delete(`/api/foodtruck/delete/${ownerId}/${truckId}`)\n            .then(response => {\n                if (response.data === 'success') this.loadAllFoodTrucks();\n                else console.log('admin delete food truck failed: ', response.data);\n            }).catch(error => {\n            console.log('admin delete food truck failed ', error);\n            })\n    };\n\n    render() {\n        let dashboard = <Spinner/>;\n        if (this.state.allFoodTrucks && this.state.allUsers && this.state.currAdminId) {\n            dashboard = (\n                <Auxiliary>\n                    <h1 className=\"header\">All Users</h1>\n                    <AllUsers className=\"admin-board\"\n                              removeUser={this.removeUser}\n                              allUsers={this.state.allUsers}\n                              changeUserAccountStatus={this.changeUserAccountStatus}/>\n                    <AllFoodTrucks className=\"admin-board\"\n                                   removeTruck={this.removeTruck}\n                                   allFoodTrucks={this.state.allFoodTrucks}/>\n                </Auxiliary>\n            );\n\n        }\n        return (\n            <div className=\"admin-board-container\">\n                {dashboard}\n            </div>\n        );\n    };\n}\n\nexport default AdminDashBoard;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './MyAccount.css';\nimport '../AccountSettingsStyle.css';\nimport '../../../GlobalStyle.css';\n\nconst myAccount = (props) => {\n    const logOut = () => {\n        const axios = require('axios');\n        axios.get('/api/users/logout')\n            .then(response => {\n                props.history.push('/');\n            });\n    };\n\n    return (\n        <div className=\"container my-account-container\">\n            <h2 className=\"header\"> Log Out </h2>\n            <div className=\"body\">\n                <div className=\"bye\" >Bye (｡･_･)ﾉ</div>\n                <button className=\"account-setting-button my-account-logout-button my-account-logout-button-color\"\n                        onClick={logOut}>\n                    Log Out\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(myAccount);\n","import React from 'react';\nimport {withStyles} from \"@material-ui/core\";\nimport {orange} from \"@material-ui/core/colors\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport './MyFoodTruck.css';\n\nconst StyledTextField = withStyles({\n    root: {\n        width: '23%',\n        marginRight: '15px',\n        marginBottom: '20px',\n        '& label.Mui-focused': {\n            color: orange[700],\n        },\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: orange[500],\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: orange[700],\n            },\n        },\n    },\n})(TextField);\n\nconst MyFoodTruck = (props) => {\n\n    return (\n        <div className=\"my-foodtruck-container\">\n            <StyledTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.foodTruck._id ? props.foodTruck._id + 1 : props.foodTruck.uuid + 1}\n                variant=\"outlined\"\n                value={props.foodTruck.name || ''}\n                onChange={e => props.handleChangeTruckName(props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid, e.target.value)}\n                label=\"Food Truck Name\"/>\n            <StyledTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.foodTruck._id ? props.foodTruck._id + 2 : props.foodTruck.uuid + 2}\n                variant=\"outlined\"\n                value={props.foodTruck.status || ''}\n                onChange={e => props.handleChangeTruckStatus(props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid, e.target.value)}\n                label=\"Food Truck Status\"/>\n            <StyledTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.foodTruck._id ? props.foodTruck._id + 3 : props.foodTruck.uuid + 3}\n                variant=\"outlined\"\n                value={props.foodTruck.averageWaitTime || ''}\n                onChange={e => props.handleChangeTruckAverageWaitTime(props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid, e.target.value)}\n                label=\"Average Wait Time\"/>\n            <StyledTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.foodTruck._id ? props.foodTruck._id + 4 : props.foodTruck.uuid + 4}\n                variant=\"outlined\"\n                value={props.foodTruck.description || ''}\n                onChange={e => props.handleChangeTruckDescription(props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid, e.target.value)}\n                label=\"Food Truck Description\"/>\n        </div>\n    );\n};\n\nexport default MyFoodTruck;\n","import React from 'react';\nimport {withStyles} from \"@material-ui/core\";\nimport {orange} from \"@material-ui/core/colors\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport './MenuItem.css';\n\nconst FoodNameTextField = withStyles({\n    root: {\n        width: '20%',\n        marginRight: '15px',\n        marginBottom: '20px',\n        '& label.Mui-focused': {\n            color: orange[700],\n        },\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: orange[500],\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: orange[700],\n            },\n        },\n    },\n})(TextField);\n\nconst FoodDescriptionTextField = withStyles({\n    root: {\n        width: '60%',\n        marginRight: '10px',\n        marginBottom: '20px',\n        '& label.Mui-focused': {\n            color: orange[700],\n        },\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: orange[500],\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: orange[700],\n            },\n        },\n    },\n})(TextField);\n\nconst FoodPriceTextField = withStyles({\n    root: {\n        width: '12%',\n        marginRight: '10px',\n        marginBottom: '20px',\n        '& label.Mui-focused': {\n            color: orange[700],\n        },\n        '& .MuiOutlinedInput-root': {\n            '&:hover fieldset': {\n                borderColor: orange[500],\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: orange[700],\n            },\n        },\n    },\n})(TextField);\n\nconst menuItem = (props) => {\n    const handleChangeName = (event) => {\n        const truckId = props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid;\n        const foodId = props.menuItem._id ? props.menuItem._id : props.menuItem.uuid;\n        props.handleChangeFoodName(truckId, foodId, event.target.value);\n    };\n    const handleChangeDescription = (event) => {\n        const truckId = props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid;\n        const foodId = props.menuItem._id ? props.menuItem._id : props.menuItem.uuid;\n        props.handleChangeFoodDescription(truckId, foodId, event.target.value);\n    };\n    const handleChangePrice = (event) => {\n        const truckId = props.foodTruck._id ? props.foodTruck._id : props.foodTruck.uuid;\n        const foodId = props.menuItem._id ? props.menuItem._id : props.menuItem.uuid;\n        props.handleChangeFoodPrice(truckId, foodId, event.target.value);\n    };\n\n    return (\n        <div>\n            <FoodNameTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.menuItem._id ? props.menuItem._id : props.menuItem.uuid}\n                variant=\"outlined\"\n                value={props.menuItem.name || ''}\n                onChange={handleChangeName}\n                label=\"Menu Item Name\"/>\n            <FoodDescriptionTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.menuItem._id ? props.menuItem._id + 1 : props.menuItem.uuid + 1}\n                variant=\"outlined\"\n                value={props.menuItem.description || ''}\n                onChange={handleChangeDescription}\n                label=\"Menu Item Description\"/>\n            <FoodPriceTextField\n                disabled={props.infoStatus === 'disabled'}\n                id={props.menuItem._id ? props.menuItem._id + 2 : props.menuItem.uuid + 2}\n                variant=\"outlined\"\n                value={props.menuItem.unitPrice || ''}\n                onChange={handleChangePrice}\n                type=\"number\"\n                label=\"Unit Price\"/>\n            <i className={`menu-item-remove-button fa fa-times ${props.infoStatus === 'disabled' ? \"menu-item-remove-button-disabled\" : \"\"}`}\n               onClick={() => {props.removeMenuItem(`${props.menuItem._id ? props.menuItem._id : props.menuItem.uuid}`, props.foodTruck._id)}}></i>\n        </div>\n    );\n};\n\nexport default menuItem;\n","import React from 'react';\nimport MenuItem from './MenuItem/MenuItem';\n\nconst foodTruckMenu = (props) => {\n    console.log('props.foodTruck.foodList ', props.foodTruck.foodList);\n    return (\n        <div>\n            {props.foodTruck.foodList.map(food => {\n                return <MenuItem\n                    key={food._id ? food._id : food.uuid}\n                    foodTruck={props.foodTruck}\n                    menuItem={food}\n                    infoStatus={props.infoStatus}\n                    removeMenuItem={props.removeMenuItem}\n                    handleChangeFoodDescription={props.handleChangeFoodDescription}\n                    handleChangeFoodName={props.handleChangeFoodName}\n                    handleChangeFoodPrice={props.handleChangeFoodPrice}\n                />\n            })}\n        </div>\n    );\n};\n\nexport default foodTruckMenu;\n","import React, {Component} from 'react';\nimport {uuid} from 'uuidv4';\nimport MyFoodTruck from './MyFoodTruck/MyFoodTruck';\nimport FoodTruckMenu from './FoodTruckMenu/FoodTruckMenu';\nimport Spinner from '../../../components/LoadingPlaceholder/LoadingPlaceHolder';\nimport Auxiliary from '../../../high-order-component/Auxiliary';\nimport './MyFoodTrucks.css';\nimport '../AccountSettingsStyle.css';\n\nconst axios = require('axios');\n\nclass MyFoodTrucks extends Component {\n    state = {\n        myFoodTruckStatus: {},\n        myFoodTrucks: null,\n    };\n\n    getMyFoodTruck = () => {\n        axios.get('/api/foodtruck/myTrucks')\n            .then(response => {\n                this.setState({myFoodTrucks: response.data});\n                const updatedStatus = {};\n                this.state.myFoodTrucks.forEach(foodTruck => {\n                    updatedStatus[foodTruck._id] = 'disabled';\n                });\n                this.setState({myFoodTruckStatus: updatedStatus});\n            }).catch(error => {\n                console.log('Get my trucks failed', error)\n            });\n    };\n\n    componentDidMount() {\n        this.getMyFoodTruck();\n    };\n\n    editFoodTruckInfo = (foodTruckId) => {\n        if (this.state.myFoodTruckStatus[foodTruckId] === 'disabled') {\n            const updatedStatus = {...this.state.myFoodTruckStatus};\n            updatedStatus[foodTruckId] = 'edit';\n            this.setState({myFoodTruckStatus: updatedStatus});\n        }\n    };\n\n    saveFoodTruckInfo = (foodTruckId) => {\n        if (this.state.myFoodTruckStatus[foodTruckId] === 'edit') {\n            const updatedStatus = {...this.state.myFoodTruckStatus};\n            updatedStatus[foodTruckId] = 'disabled';\n            this.setState({myFoodTruckStatus: updatedStatus});\n            this.state.myFoodTrucks.forEach((foodTruck) => {\n                if (foodTruck._id && foodTruck._id === foodTruckId) {\n                    axios.patch(`/api/foodtruck/update/${foodTruckId}`, {\n                        foodTruck: foodTruck\n                    }).then(response => {\n                        if (response.data === 'success') this.getMyFoodTruck();\n                        else console.log('update food truck failed: ', response.data);\n                    }).catch(error => {\n                        console.log('update food truck failed: ', error);\n                    });\n                } else if (foodTruck.uuid && foodTruck.uuid === foodTruckId) {\n                    axios.patch('/api/foodtruck/add', {\n                        foodTruck: foodTruck\n                    }).then(response => {\n                        if (response.data === 'success') this.getMyFoodTruck();\n                        else console.log('add food truck failed: ', response.data);\n                    }).catch(error => {\n                        console.log('add food truck failed: ', error);\n                    });\n                }\n            });\n        }\n    };\n\n    addMenuItem = (foodTruckId) => {\n        if (this.state.myFoodTruckStatus[foodTruckId] !== 'disabled') {\n            const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n            updatedFoodTruckInfo.forEach((foodTruck) => {\n                if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) foodTruck.foodList.push({\n                    name: undefined,\n                    description: undefined,\n                    unitPrice: undefined,\n                    uuid: uuid()\n                })\n            });\n            this.setState({myFoodTrucks: updatedFoodTruckInfo});\n        }\n    };\n\n    removeMenuItem = (foodId, foodTruckId) => {\n        if (this.state.myFoodTruckStatus[foodTruckId] !== 'disabled') {\n            const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n            updatedFoodTruckInfo.forEach((foodTruck) => {\n                if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                    foodTruck.foodList.forEach((food, i) => {\n                        if ((food._id && food._id === foodId) || (food.uuid && food.uuid === foodId)) {\n                            foodTruck.foodList.splice(i, 1);\n                        }\n                    });\n                }\n            });\n            this.setState({myFoodTrucks: updatedFoodTruckInfo});\n        }\n    };\n\n    addFoodTruck = () => {\n        const newFoodTruck = {\n            uuid: uuid(),\n            name: undefined,\n            status: undefined,\n            averageWaitTime: undefined,\n            description: undefined,\n            foodList: [],\n        };\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.push(newFoodTruck);\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n        const updatedStatus = {...this.state.myFoodTruckStatus};\n        updatedStatus[newFoodTruck.uuid] = 'edit';\n        this.setState({myFoodTruckStatus: updatedStatus});\n    };\n\n    removeFoodTruck = (foodTruckId) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck, i) => {\n            if (foodTruck._id && foodTruck._id === foodTruckId) {\n                axios.delete(`/api/foodtruck/delete/${foodTruckId}`)\n                    .then(response => {\n                        if (response.data === 'success') this.getMyFoodTruck();\n                        else console.log('vendor delete food truck failed: ', response.data);\n                    }).catch(error => {\n                        console.log('vendor delete food truck failed: ', error);\n                    });\n            } else if (foodTruck.uuid && foodTruck.uuid === foodTruckId) {\n                updatedFoodTruckInfo.splice(i, 1);\n                this.setState({myFoodTrucks: updatedFoodTruckInfo});\n                const updatedStatus = {...this.state.myFoodTruckStatus};\n                delete updatedStatus[foodTruckId];\n                this.setState({myFoodTruckStatus: updatedStatus});\n            }\n        });\n    };\n\n    handleChangeTruckName = (foodTruckId, newName) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.name = newName;\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeTruckStatus = (foodTruckId, newStatus) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.status = newStatus;\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeTruckAverageWaitTime = (foodTruckId, newAverageWaitTime) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.averageWaitTime = newAverageWaitTime;\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeTruckDescription = (foodTruckId, newDescription) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.description = newDescription;\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeFoodDescription = (foodTruckId, foodId, newDescription) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.foodList.forEach(food => {\n                    if ((food._id && food._id === foodId) || (food.uuid && food.uuid === foodId)) {\n                        food.description = newDescription;\n                    }\n                });\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeFoodName = (foodTruckId, foodId, newName) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.foodList.forEach(food => {\n                    if ((food._id && food._id === foodId) || (food.uuid && food.uuid === foodId)) {\n                        food.name = newName;\n                    }\n                });\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n    handleChangeFoodPrice = (foodTruckId, foodId, newPrice) => {\n        const updatedFoodTruckInfo = [...this.state.myFoodTrucks];\n        updatedFoodTruckInfo.forEach((foodTruck) => {\n            if ((foodTruck._id && foodTruck._id === foodTruckId) || (foodTruck.uuid && foodTruck.uuid === foodTruckId)) {\n                foodTruck.foodList.forEach(food => {\n                    if ((food._id && food._id === foodId) || (food.uuid && food.uuid === foodId)) {\n                        food.unitPrice = newPrice;\n                    }\n                });\n            }\n        });\n        this.setState({myFoodTrucks: updatedFoodTruckInfo});\n    };\n\n\n    render() {\n        let myFoodTrucks = <Spinner/>;\n        if (this.state.myFoodTrucks && Object.keys(this.state.myFoodTruckStatus).length === this.state.myFoodTrucks.length) {\n            myFoodTrucks = (\n                <Auxiliary>\n                    {this.state.myFoodTrucks.map(foodTruck => {\n                        return (\n                            <div className=\"my-foodtrucks-truck-info\"\n                                 key={`${foodTruck._id ? foodTruck._id : foodTruck.uuid} + 1`}>\n                                <div className=\"my-foodtrucks-info-header-container\">\n                                    <h3 className=\"my-foodtrucks-info-header\">Truck Info </h3>\n                                    <i className=\"my-foodtrucks-info-button fa fa-edit\"\n                                       onClick={() => {\n                                           this.editFoodTruckInfo(foodTruck._id ? foodTruck._id : foodTruck.uuid)\n                                       }}> edit</i>\n                                    <i className=\"my-foodtrucks-info-button fa fa-save\"\n                                       onClick={() => {\n                                           this.saveFoodTruckInfo(foodTruck._id ? foodTruck._id : foodTruck.uuid)\n                                       }}> save</i>\n                                    <i className=\"my-foodtrucks-info-button my-foodtrucks-delete-button fa fa-trash\"\n                                       onClick={() => {\n                                           this.removeFoodTruck(foodTruck._id ? foodTruck._id : foodTruck.uuid)\n                                       }}> delete</i>\n                                </div>\n                                <MyFoodTruck\n                                    infoStatus={this.state.myFoodTruckStatus[foodTruck._id ? foodTruck._id : foodTruck.uuid]}\n                                    foodTruck={foodTruck}\n                                    handleChangeTruckName={this.handleChangeTruckName}\n                                    handleChangeTruckStatus={this.handleChangeTruckStatus}\n                                    handleChangeTruckAverageWaitTime={this.handleChangeTruckAverageWaitTime}\n                                    handleChangeTruckDescription={this.handleChangeTruckDescription}\n                                />\n                                <div className=\"my-foodtrucks-info-header-container\">\n                                    <h3 className=\"my-foodtrucks-info-header\">Menu Info </h3>\n                                    <i className={`my-foodtrucks-info-button fa fa-plus ${this.state.myFoodTruckStatus[foodTruck._id ? foodTruck._id : foodTruck.uuid] === 'disabled' ? \"my-foodtrucks-info-button-disabled\" : \"\"}`}\n                                       onClick={() => {\n                                           this.addMenuItem(foodTruck._id ? foodTruck._id : foodTruck.uuid)\n                                       }}> add</i>\n                                </div>\n                                <FoodTruckMenu\n                                    infoStatus={this.state.myFoodTruckStatus[foodTruck._id ? foodTruck._id : foodTruck.uuid]}\n                                    foodTruck={foodTruck}\n                                    removeMenuItem={this.removeMenuItem}\n                                    handleChangeFoodDescription={this.handleChangeFoodDescription}\n                                    handleChangeFoodName={this.handleChangeFoodName}\n                                    handleChangeFoodPrice={this.handleChangeFoodPrice}\n                                />\n                            </div>\n                        );\n                    })}\n                    <button className=\"account-setting-button account-setting-button-color\" onClick={() => {\n                        this.addFoodTruck()\n                    }}>\n                        Add Another Truck\n                    </button>\n                </Auxiliary>\n            )\n        }\n        return (\n            <div className=\"my-foodtrucks-container\">\n                {myFoodTrucks}\n            </div>\n        );\n    }\n}\n\nexport default MyFoodTrucks;\n","import React from 'react';\nimport { uuid } from 'uuidv4';\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport useForceUpdate from 'use-force-update';\nimport './Password.css';\nimport '../AccountSettingsStyle.css';\nimport '../../../GlobalStyle.css';\n\nconst Password = () => {\n    const StyledTextField = withStyles({\n        root: {\n            marginBottom: '10px',\n            marginTop: '10px',\n            '& label.Mui-focused': {\n                color: orange[700],\n            },\n            '& .MuiOutlinedInput-root': {\n                '&:hover fieldset': {\n                    borderColor: orange[500],\n                },\n                '&.Mui-focused fieldset': {\n                    borderColor: orange[700],\n                },\n            },\n        },\n    })(TextField);\n    const forceUpdate = useForceUpdate();\n    const user = {};\n\n    let oldPassword;\n    let newPassword;\n    let confirmNewPassword;\n\n    const axios = require('axios');\n    axios.get('/api/users/session')\n        .then(response => {\n            if (response.data.name) {\n                user.name = response.data.name;\n                user.id = response.data.id;\n                user.type = response.data.type;\n            }\n        });\n\n    const handleChangeOldPassword = (event) => {\n        oldPassword = event.target.value;\n    };\n    const handleChangeNewPassword = (event) => {\n        newPassword = event.target.value;\n    };\n    const handleChangeConfirmNewPassword = (event) => {\n        confirmNewPassword = event.target.value;\n    };\n\n    const handleResetPasswordButton = () => {\n        if (!oldPassword) {\n            alert('Please input your current password');\n            return false;\n        } else if (!newPassword) {\n            alert('Please input your new password');\n            return false;\n        } else if (newPassword !== confirmNewPassword) {\n            alert('Cannot confirm new password');\n            return false;\n        } else {\n            axios.patch('/api/account/password', {\n                id: user.id,\n                oldPassword: oldPassword,\n                newPassword: newPassword\n            })\n                .then(response => {\n                    if (response.data === 'success') {\n                        alert('change password success!');\n                        oldPassword = '';\n                        newPassword = '';\n                        confirmNewPassword = '';\n                        forceUpdate();\n                    } else if (response.data === 'user not logged in') {\n                        alert('please login')\n                    } else if (response.data === 'wrong password') {\n                        alert('please provide correct password')\n                    } else {\n                        alert('change password failed');\n                    }\n                }).catch(error => {\n                    alert('change password failed');\n                    console.log('change password failed', error)\n                });\n        }\n    };\n\n    return (\n        <div className=\"container password-container\">\n            <h2 className=\"header\"> Reset Your Password</h2>\n            <div className=\"body\">\n                <StyledTextField\n                    id={uuid()}\n                    type=\"password\"\n                    value={oldPassword}\n                    onChange={handleChangeOldPassword}\n                    label=\"Old Password\"\n                    variant=\"outlined\"/>\n                <StyledTextField\n                    id={uuid()}\n                    type=\"password\"\n                    value={newPassword}\n                    onChange={handleChangeNewPassword}\n                    label=\"New Password\"\n                    variant=\"outlined\"/>\n                <StyledTextField\n                    id={uuid()}\n                    type=\"password\"\n                    value={confirmNewPassword}\n                    onChange={handleChangeConfirmNewPassword}\n                    label=\"Confirm New Password\"\n                    variant=\"outlined\"/>\n                <button className=\"account-setting-button account-setting-button-color password-reset-button\"\n                        onClick={handleResetPasswordButton}>\n                    Reset Password\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Password;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { orange } from '@material-ui/core/colors';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst StyledButton = withStyles(() => ({\n    root: {\n        backgroundColor: 'white',\n        color: orange[700],\n        border: 0,\n        '&:hover': {\n            backgroundColor: orange[100],\n        },\n    },\n}))(Button);\n\nconst StyledTableCell = withStyles(() => ({\n    root: {\n        border: \"none\"\n    },\n}))(TableCell);\n\nconst TransactionDetails = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const useStyles = makeStyles({\n        table: {\n            maxWidth: 650,\n        },\n    });\n    const classes = useStyles();\n\n    const createData = (itemId, itemName, itemUnitPrice, itemNumber, itemTotalPrice) => {\n        return { itemId, itemName, itemUnitPrice, itemNumber, itemTotalPrice };\n    };\n\n    const rows = props.orderItems.map(item => {\n        return createData(item._id,\n            item.name,\n            `$${item.unitPrice.toFixed(2)}`,\n            item.numberOrdered,\n            `$${item.totalPrice.toFixed(2)}`,\n            );\n    });\n\n    return (\n        <div>\n            <StyledButton variant=\"outlined\" onClick={handleClickOpen}>\n                Details\n            </StyledButton>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Transaction Details\n                </DialogTitle>\n                <DialogContent>\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell align=\"right\">Unit Price</TableCell>\n                                    <TableCell align=\"right\">Number Ordered</TableCell>\n                                    <TableCell align=\"right\">Total Price</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows.map(row => (\n                                    <TableRow key={row.itemId}>\n                                        <StyledTableCell component=\"th\" scope=\"row\">\n                                            {row.itemName}\n                                        </StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.itemUnitPrice}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.itemNumber}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.itemTotalPrice}</StyledTableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default TransactionDetails;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport date from 'date-and-time';\nimport TransactionDetails from './TransactionDetails';\nimport './Transaction.css';\n\nconst Transaction = (props) => {\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 650,\n        },\n    });\n    const classes = useStyles();\n\n    const createData = (orderId, customerName, orderDate, orderTotal, foodTruckName, vendorName, status, orderItems) => {\n        return {orderId, customerName, orderDate, orderTotal, foodTruckName, vendorName, status, orderItems};\n    };\n\n    const rows = props.transactions.map(transaction => {\n        return createData(transaction._id,\n            transaction.customer.name,\n            date.format(new Date(transaction.time), 'YYYY/MM/DD h:m A'),\n            `$${transaction.total.toFixed(2)}`,\n            transaction.foodTruck.name,\n            transaction.foodTruck.owner,\n            transaction.status,\n            transaction.orderItems);\n    });\n\n    if (props.user.type === 'vendor') {\n        return (\n            <div className=\"order-history-container\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Order ID</TableCell>\n                                <TableCell align=\"right\">Customer</TableCell>\n                                <TableCell align=\"right\">Date</TableCell>\n                                <TableCell align=\"right\">Total</TableCell>\n                                <TableCell align=\"right\">Food Truck</TableCell>\n                                <TableCell align=\"right\">Vendor</TableCell>\n                                <TableCell align=\"right\">Status</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => (\n                                <TableRow key={row.orderId}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.orderId}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.customerName}</TableCell>\n                                    <TableCell align=\"right\">{row.orderDate}</TableCell>\n                                    <TableCell align=\"right\">{row.orderTotal}</TableCell>\n                                    <TableCell align=\"right\">{row.foodTruckName}</TableCell>\n                                    <TableCell align=\"right\">{row.vendorName}</TableCell>\n                                    <TableCell align=\"right\">\n                                        <select onChange={(e) => {\n                                            props.changeOrderStatus(row.orderId, e.target.value)\n                                        }} defaultValue={row.status}>\n                                            <option value=\"pending\">pending</option>\n                                            <option value=\"completed\">completed</option>\n                                        </select>\n                                    </TableCell>\n                                    <TableCell align=\"right\"> <TransactionDetails orderItems={row.orderItems}/>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <i onClick={() => {\n                                            props.removeRow(row.orderId)\n                                        }}\n                                           className=\"transaction-delete-record fa fa-times-circle log-remove-row-button\"\n                                        ></i>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"order-history-container\">\n                <TableContainer component={Paper}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Order ID</TableCell>\n                                <TableCell align=\"right\">Customer</TableCell>\n                                <TableCell align=\"right\">Date</TableCell>\n                                <TableCell align=\"right\">Total</TableCell>\n                                <TableCell align=\"right\">Food Truck</TableCell>\n                                <TableCell align=\"right\">Vendor</TableCell>\n                                <TableCell align=\"right\">Status</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => (\n                                <TableRow key={row.orderId}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.orderId}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.customerName}</TableCell>\n                                    <TableCell align=\"right\">{row.orderDate}</TableCell>\n                                    <TableCell align=\"right\">{row.orderTotal}</TableCell>\n                                    <TableCell align=\"right\">{row.foodTruckName}</TableCell>\n                                    <TableCell align=\"right\">{row.vendorName}</TableCell>\n                                    <TableCell align=\"right\">{row.status}</TableCell>\n                                    <TableCell align=\"right\"> <TransactionDetails orderItems={row.orderItems}/>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <i onClick={() => {\n                                            props.removeRow(row.orderId)\n                                        }}\n                                           className=\"transaction-delete-record fa fa-times-circle log-remove-row-button\"\n                                        ></i>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        );\n    }\n\n};\n\nexport default Transaction;\n","import React, {Component} from 'react';\nimport Spinner from '../../../components/LoadingPlaceholder/LoadingPlaceHolder';\nimport Transaction from './Transaction/Transaction';\n\nconst axios = require('axios');\n\nclass Transactions extends Component {\n    state = {\n        allTransactions: null,\n        user: null\n    };\n\n    getAllOrderHistory = () => {\n        axios.get('/api/orderHistory/all')\n            .then(response => {\n                this.setState({allTransactions: response.data});\n            }).catch(error => {\n                console.log('Get all order history failed: ', error)\n            });\n    };\n\n    componentDidMount() {\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.name) {\n                    const user = {\n                        id: response.data.id,\n                        name: response.data.name,\n                        type: response.data.type,\n                    };\n                    this.setState({user: user});\n                    this.getAllOrderHistory();\n                }\n            });\n    };\n\n    removeTransactionHistory = (orderId) => {\n        if (this.state.user.type === 'admin') {\n            axios.delete(`/api/orderHistory/remove/${orderId}`).then(response => {\n                if (response.data === 'success') this.getAllOrderHistory();\n                else console.log('delete order history failed');\n            }).catch(error => {\n                console.log('delete order history failed: ', error);\n            })\n        } else {\n            axios.patch(`/api/orderHistory/disable/${orderId}`)\n                .then(response => {\n                    if (response.data === 'success') this.getAllOrderHistory();\n                    else console.log('Oops remove transaction history failed');\n                }).catch(error => {\n                    console.log('Oops remove transaction history failed: ', error);\n            });\n        }\n    };\n\n    changeOrderStatus = (orderId, newStatus) => {\n        axios.patch(`/api/orderHistory/status/${orderId}/${newStatus}`)\n            .then(response => {\n                if (response.data === 'success') this.getAllOrderHistory();\n                else console.log('change order status failed');\n            }).catch(error => {\n                console.log('change order status failed: ', error);\n            });\n    };\n\n    render() {\n        let adminTransaction = <Spinner/>;\n        if (this.state.allTransactions) {\n            adminTransaction =\n                <Transaction\n                    changeOrderStatus={this.changeOrderStatus}\n                    removeRow={this.removeTransactionHistory}\n                    transactions={this.state.allTransactions}\n                    user={this.state.user}/>\n        }\n        return (\n            <div className=\"log-container\">\n                {adminTransaction}\n            </div>\n        );\n    };\n}\n\nexport default Transactions;\n","import React, {Component} from 'react';\nimport AdminDashBoard from '../../components/AccountSettings/AdminDashBoard/AdminDashBoard';\nimport MyAccount from '../../components/AccountSettings/MyAccount/MyAccount';\nimport MyFoodTrucks from '../../components/AccountSettings/MyFoodTrucks/MyFoodTrucks';\nimport Password from '../../components/AccountSettings/Password/Password';\nimport Transactions from '../../components/AccountSettings/Transactions/Transactions';\nimport Spinner from '../../components/LoadingPlaceholder/LoadingPlaceHolder';\nimport Auxiliary from '../../high-order-component/Auxiliary';\n\nimport './AccountSetting.css';\n\nclass AccountSetting extends Component {\n    state = {\n        userType: null,\n        currentSetting: \"account\"\n    };\n\n    componentDidMount() {\n        const axios = require('axios');\n        axios.get('/api/users/session')\n            .then(response => {\n                if (response.data.name) this.setState({userType: response.data.type});\n            });\n    };\n\n    getSettingChoice = () => {\n        if (this.state.userType === 'admin') {\n            return (\n                <div\n                    className={`account-setting-choice ${this.state.currentSetting === 'dashboard' ? 'account-setting-choice-selected' : ''}`}\n                    onClick={() => {\n                        this.updateCurrentSetting('dashboard')\n                    }}>\n                    Admin Dashboard\n                </div>\n            );\n        }\n        else if (this.state.userType === 'customer') {\n            return null;\n        }\n        else {\n            return (\n                <div\n                    className={`account-setting-choice ${this.state.currentSetting === 'foodtruck' ? 'account-setting-choice-selected' : ''}`}\n                    onClick={() => {\n                        this.updateCurrentSetting('foodtruck')\n                    }}>\n                    My Food Trucks\n                </div>\n            );\n        }\n    };\n\n    updateCurrentSetting = (newSetting) => {\n        this.setState({currentSetting: newSetting});\n    };\n\n    settingUI = () => {\n        if (this.state.currentSetting === 'password') return <Password/>;\n        else if (this.state.currentSetting === 'foodtruck') return <MyFoodTrucks/>;\n        else if (this.state.currentSetting === 'dashboard') return <AdminDashBoard/>;\n        else if (this.state.currentSetting === 'transactions') return <Transactions/>;\n        else return <MyAccount/>;\n    };\n\n\n    render() {\n        let accountSetting = <Spinner/>;\n        if (this.state.userType) {\n            accountSetting = (\n                <div className=\"account-setting-container\">\n                    <div className=\"account-setting-title\"> Account Settings</div>\n                    <div className=\"account-setting-choices\">\n                        <div\n                            className={`account-setting-choice ${this.state.currentSetting === 'account' ? 'account-setting-choice-selected' : ''}`}\n                            onClick={() => {\n                                this.updateCurrentSetting('account')\n                            }}>\n                            My Account\n                        </div>\n                        <div\n                            className={`account-setting-choice ${this.state.currentSetting === 'password' ? 'account-setting-choice-selected' : ''}`}\n                            onClick={() => {\n                                this.updateCurrentSetting('password')\n                            }}>\n                            Password\n                        </div>\n                        {this.getSettingChoice()}\n                        <div\n                            className={`account-setting-choice ${this.state.currentSetting === 'transactions' ? 'account-setting-choice-selected' : ''}`}\n                            onClick={() => {\n                                this.updateCurrentSetting('transactions')\n                            }}>\n                            Order History\n                        </div>\n                    </div>\n                    {this.settingUI()}\n                </div>\n            );\n        }\n        return (\n            <Auxiliary>\n                {accountSetting}\n            </Auxiliary>\n        );\n    };\n}\n\nexport default AccountSetting;\n","import React, { Component } from 'react';\nimport './ThankYou.css';\nimport '../../GlobalStyle.css';\n\n\nclass ThankYou extends Component {\n    redirectToHomePage = () => {\n        setTimeout(() => {\n            this.props.history.push('/');\n            }, 3500);\n    };\n\n    render () {\n        this.redirectToHomePage();\n        return (\n            <div className=\"thank-you-container\">\n                <h1 className=\"header thank-you-header\">\n                    Thank you! Your order is being processed!\n                </h1>\n            </div>\n        );\n    };\n}\n\nexport default ThankYou;\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport OrderBuilder from './containers/OrderBuilder/OrderBuilder';\nimport FoodTruckSelector from './containers/FoodTruckSelector/FoodTruckSelector';\nimport Checkout from './containers/Checkout/Checkout';\nimport Authentication from './containers/Authentication/Authentication';\nimport AccountSetting from './containers/AccountSetting/AccountSetting';\nimport ThankYou from './containers/ThankYou/ThankYou';\n\nfunction App() {\n    return (\n        <div>\n            <Layout>\n                <Route path=\"/\" exact component={FoodTruckSelector}/>\n                <Route path=\"/order-builder\" component={OrderBuilder}/>\n                <Route path=\"/authentication\" component={Authentication}/>\n                <Route path=\"/checkout\" component={Checkout}/>\n                <Route path=\"/account-setting\" component={AccountSetting}/>\n                <Route path=\"/thank-you\" component={ThankYou}/>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter forceRefresh={true}>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}